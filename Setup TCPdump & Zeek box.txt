Setup TCPdump & Zeek box

0) Pre-setup
apt install -y acl ntpdate ntp
systemctl stop ntp
ntpdate pool.ntp.org
systemctl start ntp
timedatectl set-timezone America/Chicago

TCPDUMP

1) run TCPdump as non-root
    setcap cap_net_raw,cap_net_admin=eip /usr/sbin/tcpdump
    mkdir -p /opt/tcpdump/logs
    echo -e '#!/bin/bash\n/usr/sbin/tcpdump -i enp2s0 -G 3600 -w /opt/tcpdump/logs/`hostname -s`.`date +%m-%d-%Y.%H:%M:%S`.pcap -z bzip2' > /opt/tcpdump/tcpdump-script.sh
    chown -R tcpdump.tcpdump /opt/tcpdump
    chmod -R 0760 /opt/tcpdump/logs
    chmod 0750 /opt/tcpdump/tcpdump-script.sh
    #chown root.tcpdump /usr/sbin/tcpdump
    #chown root.tcpdump /usr/bin/bzip2
    #chmod 0770 /usr/sbin/tcpdump
    #setfacl R -m user:tcpdump:rw /opt/tcpdump/
    #setfacl -R -m group:tcpdump:rw /opt/tcpdump/
    #setfacl -m user:tcpdump:rwx /opt/tcpdump/tcpdump-script.sh
    #setfacl -m group:tcpdump:rwx /opt/tcpdump/tcpdump-script.sh   
    #setfacl -m user:tcpdump:rwx /usr/sbin/tcpdump
    #setfacl -m group:tcpdump:rwx /usr/sbin/tcpdump
    
    - When updating packages (i.e. tcpdump), settings may reset and require setcap to be rerun.

2) Create service
    # Create a script for the execution of the command and create a .service file to execute the script. ExecStart does not handle bash 
vi /etc/systemd/system/tcpdumpd.service

[Unit]
Description=TCPDump
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=30
User=tcpdump
ExecStart=/opt/tcpdump/tcpdump-script.sh

StandardOutput=journal+console

[Install]
WantedBy=multi-user.target
    - The command will capture packets every hour (3600) and output them to /opt/tcpdump/* dir in compressed format. The output name requires "%%" to escape the "%" as required for systemd.

    3) Enable (we will start after reboot)
systemctl daemon-reload
systemctl enable tcpdumpd.service



ZEEK
    1) Install
apt update && sudo apt install curl cmake make gcc g++ flex bison libpcap-dev libssl-dev python3 python3-dev swig zlib1g-dev python3-git python3-semantic-version -y
    - dependencies

    - What version are you running? "lsb_release -a"

    Ubuntu 18.04
echo 'deb http://download.opensuse.org/repositories/security:/zeek/xUbuntu_18.04/ /' | sudo tee /etc/apt/sources.list.d/security:zeek.list
curl -fsSL https://download.opensuse.org/repositories/security:zeek/xUbuntu_18.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/security_zeek.gpg > /dev/null
sudo apt update
sudo apt install zeek-lts -y

    Ubuntu 20.04
echo 'deb http://download.opensuse.org/repositories/security:/zeek/xUbuntu_20.04/ /' | sudo tee /etc/apt/sources.list.d/security:zeek.list
curl -fsSL https://download.opensuse.org/repositories/security:zeek/xUbuntu_20.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/security_zeek.gpg > /dev/null
sudo apt update
sudo apt install zeek-lts -y

2) Add to $PATH
echo 'export PATH=/opt/zeek/bin:$PATH' >> /etc/profile
source /etc/profile

3) Run zeek as non-root (same as above)
    adduser zeek --system --no-create-home
    addgroup zeek zeek
    setcap cap_net_raw,cap_net_admin=eip /opt/zeek/bin/zeek
    setcap cap_net_raw,cap_net_admin=eip /opt/zeek/bin/capstats
    chown -R zeek.zeek /opt/zeek
    chmod -R 0760 /opt/zeek/logs
    chmod -R 0760 /opt/zeek/spool
    #chmod 0750 /opt/zeek/bin/zeek
setfacl -m user:zeek:rx /opt/zeek/bin/zeek
setfacl -m group:zeek:rx /opt/zeek/bin/zeek
    #setfacl -m user:zeek:rw /opt/zeek/logs
    #setfacl -m group:zeek:rw /opt/zeek/logs
    #setfacl -m user:zeek:rw /opt/zeek/spool
    #setfacl -m group:zeek:rw /opt/zeek/spool
4) Create supervisor
	
echo -e 'event zeek_init()
{
if ( Supervisor::is_supervisor() )
    {
    local sn = Supervisor::NodeConfig($name="zeekd", $interface="enp2s0");
    local res = Supervisor::create(sn);

    if ( res == "" )
        print "supervisor created a new node";
    else
        print "supervisor failed to create node", res;
    }
else
    print fmt("supervised node '%s' zeek_init()", Supervisor::node()$name);
}

event zeek_done()
{
if ( Supervisor::is_supervised() )
    print fmt("supervised node '%s' zeek_done()", Supervisor::node()$name);
else
    print "supervisor zeek_done()";
}' > /opt/zeek/etc/simple-supervisor.zeek

5) Create service

echo -e '[Unit]
Description=The Zeek Network Security Monitor
Wants=network-online.target

[Service]
Type=simple
Environment=SUPERVISOR=/opt/zeek/etc/simple-supervisor.zeek
EnvironmentFile=-/etc/default/zeek

Group=zeek
NoNewPrivileges=yes
ProtectSystem=strict
PrivateTmp=yes
ProtectHome=yes
ReadWritePaths=/opt/zeek/logs
PrivateDevices=yes
ProtectKernelTunables=yes
ProtectControlGroups=yes
ProtectKernelModules=yes
SystemCallFilter=@system-service 
SystemCallErrorNumber=EPERM

WorkingDirectory=/opt/zeek/logs
UMask=127
ExecStart=/opt/zeek/bin/zeek -j -C ${SUPERVISOR}

StandardOutput=journal+console

[Install]
WantedBy=multi-user.target ' > /etc/systemd/system/zeekd.service

5) start it
systemctl daemon-reload
systemctl enable zeekd.service
    

6) Reboot for group permissions
systemctl status tcpdumpd.service
systemctl status zeekd.service